openapi: 3.0.1
info:
  title: Publication API 
  description: This API provides operations for submission of notices for publication and their follow-up
  license:
    name: EUPL
    url: https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
  version: 1.1.6
servers:
  - description: Generated server url
    url: https://enotices2.ted.europa.eu/esenders
security:
  - esenders-token: []
paths:
  /api/v2/notice/notices/{businessId}/validation-report:
    get:
      tags:
        - Notice
      summary: Retrieve the notice validation report.
      operationId: getValidationReport
      parameters:
        - name: businessId
          in: path
          description: The notice business identifier (notice identifier - version)
          required: true
          schema:
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6-01
      responses:
        '200':
          description: Provides the notice validation report in SVRL (Schematron Validation Report Language) format.
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: |-
            Possible issues:
            - Missing Authorization header in request
            - Invalid business id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '401':
          description: The provided TED API key doesn't exist or it is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '403':
          description: No Enotices2 account found for the EU login account identified by provided TED API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '404':
          description: Notice or notice report was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '500':
          description: |-
            Possible issues:
            - The provided TED API key cannot be currently validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
  /api/v2/notice/notices/{businessId}/stop-publication-esentool:
    post:
      tags:
        - Notice
      summary: Stop the notice publication.
      operationId: stopPublicationEsentool
      parameters:
        - name: businessId
          in: path
          description: The notice business identifier (notice identifier - version)
          required: true
          schema:
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6-01
      responses:
        '200':
          description: The publication of the notice has been stopped.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notice'
        '400':
          description: |-
            Possible issues:
            - Missing Authorization header in request
            - Invalid business id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '401':
          description: The provided TED API key doesn't exist or it is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '403': 
          description: |-
            Possible issues:
            - Notice publication cannot be stopped because it is not in SUBMITTED status.
            - No Enotices2 account found for the EU login account identified by provided TED API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '404':
          description: Notice was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '423':
          description: Cannot acquire lock because notice is already locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '500':
          description: |-
            Possible issues:
            - The provided TED API key cannot be currently validated.
            - Internal error while updating notice status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'           
  /api/v2/notice/notices/submit:
    post:
      tags:
        - Notice
      summary: Submit XML notice
      operationId: submitNotice
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetadataAndNotice'
        required: true
      responses:
        '201':
          description: The notice is created. If CVS validation succeeds, the notice is submitted for publication. Otherwise, is not submitted for publication and report validation can be retrieved from 'validationReportUrl' response property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSReport'
        '400':
          description: |-
            Possible issues:
            - Missing Authorization header in request
            - Missing metadata 
            - Missing notice 
            - Missing noticeAuthorEmail
            - Missing noticeAuthorLocale
            - Notice with the same noticeId and versionId already exists.
            - noticeAuthorEmaill is not valid.
            - Notice parameter cannot be empty.
            - Notice cannot be parsed, it is not valid.
            - Could not find given procedure and cannot create new one for this type of notice.
            - Missing procedure id in the notice.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '401':
          description: The provided TED API key doesn't exist or it is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '403':
          description: No Enotices2 account found for the EU login account identified by provided TED API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '404':
          description: |-
            Possible issues:
            - No compatible SDK version found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '409':
          description: |-
            Possible issues: 
            - Multiple objects are created/updated at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '500':
          description: |-
            Possible issues:
            - The provided TED API key cannot be currently validated.
            - The CVS service is not available to validate the notice.
            - The CVS could not execute the validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'    
  /api/v2/notice/notices/search-esentool:
    get:
      tags:
        - Notice
      summary: Search procedures.
      operationId: searchProceduresEsentool
      parameters:
        - name: page
          in: query
          description: Indicates the page number of the paginated result list
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: Indicates the size of the paginated result list
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
        - name: sortProperty
          in: query
          description: The property to use to sort the results
          required: false
          schema:
            type: string
            enum:
              - id
              - versionId
              - procedureId
              - status
              - updatedAt
              - submittedAt
              - publicationId
              - publicationDate
              - noticeType
              - legalBasis
              - noticeAuthor
              - expectedPublicationDate
        - name: sortDirection
          in: query
          description: The sort direction, ascending (ASC) or descending (DESC)
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: searchNoticesEsentool
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchNotice'
      responses:
        '200':
          description: All notices based on filters. Even if 0 results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNoticeResult'
        '400':
          description: Missing Authorization header in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '401':
          description: The provided TED API key doesn't exist or it is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '403':
          description: No Enotices2 account found for the EU login account identified by provided TED API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
        '500':
          description: |-
            Possible issues:
            - The provided TED API key cannot be currently validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
  /api/v2/notice/notices/convert:
    post:
      tags:
        - Notice
      summary: Convert an XML notice in the old TED XML format to an eForms notice.
      operationId: convert
      requestBody:
        content:
          application/xml:
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        '200':
          description: The notice was successfully converted.
          content:
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: byte
        '400':
          description: |-
            Possible issues:
            - Missing Authorization header in request
            - The request body is incomplete or invalid.
        '401':
          description: The provided TED API key doesn't exist or it is invalid.
        '500':
          description: |-
            Possible issues:
            - The provided TED API key cannot be currently validated.
components:
  schemas:
    ExceptionBody:
      type: object
      properties:
        code:
          type: string
          description: the exception code.
          example: notice.NOTICE_NOT_FOUND
        message:
          type: string
          description: the exception message.
          example: No notice found
      description: The information related to the Exception that occurred.
    Notice:
      type: object
      properties:
        id:
          type: string
          description: the notice identifier (without the version).
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        versionId:
          type: string
          description: the version identifier.
          example: '01'
        procedureId:
          type: string
          description: the procedure identifier.
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa5
        status:
          $ref: '#/components/schemas/NoticeStatus'
        updatedAt:
          type: string
          description: >-
            The exact moment of the latest update of the notice by either user
            or system.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        submittedAt:
          type: string
          description: The notice submission date/time.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        publicationId:
          type: string
          description: the notice publication identifier.
          example: 8164123-2024
        publicationDate:
          type: string
          description: the notice publication date.
          format: date
        noticeType:
          type: string
          description: the notice notice type.
          example: '2'
        legalBasis:
          type: string
          description: the notice legal basis code.
          example: 32014L0025
        languages:
          type: array
          description: the notice languages.
          example: '["ENG","DEU"]'
          items:
            type: string
            description: the notice language.
            example:
            - ENG
            - DEU
        noticeAuthor:
          type: string
          description: >-
            The email is used to identify the person responsible for the notice,
            i.e. the Contracting Authority.
          example: minimal@email.eu
        expectedPublicationDate:
          type: string
          description: The notice expected publication date.
          format: date
    NoticeStatus:
      type: string
      description: the notice status.
      example: STOPPED
      enum:
        - DRAFT
        - SUBMITTED
        - STOPPED        
        - PUBLISHED
        - PUBLISHING
        - DELETED
        - NOT_PUBLISHED        
        - ARCHIVED
        - VALIDATION_FAILED
    Metadata:
      required:
        - noticeAuthorEmail
        - noticeAuthorLocale
      type: object
      properties:
        noticeAuthorEmail:
          type: string
          description: >-
            The email is used to identify the person responsible for the notice,
            i.e. the Contracting Authority.
          example: john@doe.com
        noticeAuthorLocale:
          type: string
          description: >-
            The EU official language in which the Contracting Authority wishes
            to be notified by the Publications Office.
          example: en
      description: The metadata that is used to identify the original author of the notice.
    MetadataAndNotice:
      required:
        - metadata
        - notice
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        notice:
          type: string
          description: The notice XML content.
          format: binary
      description: The metadata and notice used during the submission of the notice.
    CVSReport:
      type: object
      properties:
        validationReportUrl:
          type: string
          description: the url to use to retrieve the CVS validation report
        success:
          type: boolean
          description: the status of the submission. True if success, otherwise false.
      description: The CVS report details after the notice xml submission.
    SearchNotice:
      type: object
      properties:
        id:
          type: string
          description: the notice identifier (without the version).
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        versionId:
          type: string
          description: the version identifier.
          example: '01'
        submittedAfter:
          type: string
          description: the minimum date/time value used to find notices submitted after this point.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        submittedBefore:
          type: string
          description: the maximum date/time value used to find notices submitted before this point.
          format: date-time
          example: '2022-12-01T23:00:00Z'
        publishedAfter:
          type: string
          description: the minimum date/time value used to find notices published after this point.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        publishedBefore:
          type: string
          description: the maximum date/time value used to find notices published before this point.
          format: date-time
          example: '2022-12-01T23:00:00Z'
        statuses:
          type: array
          description: |-
              The list of status to include in the search: 
               * DRAFT - The notice is being drafted. 
               * SUBMITTED - The notice is successfully received, validated and sent to OP (received by TED-Monitor-2022). 
               * STOPPED - Publication of the notice was stopped by the buyer/ eSender before publication and the request was accepted. 
               * PUBLISHED - The notice is published online on TED. 
               * PUBLISHING - Publication process in progress, i.e. the notice has been added to the daily export for TED. 
               * DELETED - The notice has been deleted by front-end user. 
               * NOT_PUBLISHED - The notice was received but not published on TED. 
               * ARCHIVED - The notice has been archived by front-end user.
          items:
            type: string
            description: |-
              The list of status to include in the search: 
               * DRAFT - The notice is being drafted. 
               * SUBMITTED - The notice is successfully received, validated and sent to OP (received by TED-Monitor-2022). 
               * STOPPED - Publication of the notice was stopped by the buyer/ eSender before publication and the request was accepted. 
               * PUBLISHED - The notice is published online on TED. 
               * PUBLISHING - Publication process in progress, i.e. the notice has been added to the daily export for TED. 
               * DELETED - The notice has been deleted by front-end user. 
               * NOT_PUBLISHED - The notice was received but not published on TED. 
               * ARCHIVED - The notice has been archived by front-end user.
            enum:
              - DRAFT
              - SUBMITTED
              - STOPPED              
              - PUBLISHED
              - PUBLISHING
              - DELETED
              - NOT_PUBLISHED              
              - ARCHIVED
              - VALIDATION_FAILED
        noticeAuthor:
          type: string
          description: the notice author
          example: minimal@email.eu
      description: The information used in a notice search.
    SearchNoticeResult:
      type: object
      properties:
        totalSize:
          type: integer
          description: the total size of entities found.
          format: int64
          example: 99
        content:
          type: array
          description: the content of entities found.
          items:
            $ref: '#/components/schemas/Notice'
      description: The information returned after a notice search.
  securitySchemes:
    esenders-token:
      type: http
      name: esenders-token
      description: TED API key generated by TED Developer Portal
      scheme: bearer
      bearerFormat: JWT
